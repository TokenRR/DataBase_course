"""Create

Revision ID: 3f4d76e9210d
Revises: 
Create Date: 2023-05-06 23:59:10.195615

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3f4d76e9210d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regname',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sex_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_subj',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('outid', sa.UUID(), nullable=False),
    sa.Column('birth', sa.Integer(), nullable=True),
    sa.Column('sextype_id', sa.Integer(), nullable=True),
    sa.Column('regname_id', sa.Integer(), nullable=True),
    sa.Column('areaname', sa.String(), nullable=True),
    sa.Column('tername', sa.String(), nullable=True),
    sa.Column('regtypename', sa.String(), nullable=True),
    sa.Column('tertypename', sa.String(), nullable=True),
    sa.Column('classprofilename', sa.String(), nullable=True),
    sa.Column('classlangname', sa.String(), nullable=True),
    sa.Column('eoname', sa.String(), nullable=True),
    sa.Column('eotypename', sa.String(), nullable=True),
    sa.Column('eoregname', sa.String(), nullable=True),
    sa.Column('eoareaname', sa.String(), nullable=True),
    sa.Column('eotername', sa.String(), nullable=True),
    sa.Column('eoparent', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['regname_id'], ['regname.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['sextype_id'], ['sex_type.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('outid')
    )
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('outid', sa.UUID(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('ball100', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('ball12', sa.Integer(), nullable=True),
    sa.Column('ball', sa.String(), nullable=True),
    sa.Column('ptname', sa.String(), nullable=True),
    sa.Column('ptregname_id', sa.Integer(), nullable=True),
    sa.Column('ptareaname', sa.String(), nullable=True),
    sa.Column('pttername', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['outid'], ['person.outid'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['ptregname_id'], ['regname.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['status_id'], ['test_status.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['subject_id'], ['test_subj.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )

    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('zno',
    sa.Column('outid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('birth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sextypename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('areaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('regtypename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tertypename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classprofilename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classlangname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eoname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eotypename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eoregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eoareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eotername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eoparent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umltest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umlteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umlball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('umlball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('umlball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('umladaptscale', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('umlptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umlptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umlptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('umlpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrsubtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ukrball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ukrball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ukradaptscale', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ukrptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ukrpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histlang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('histball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('histball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('histptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('histpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathlang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mathball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mathdpalevel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mathptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathsttest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstlang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mathstball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mathstptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mathstpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phystest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physlang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('physball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('physball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('physptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('physpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemlang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('chemball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chemball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chemptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chemptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('chempttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('biotest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('biolang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bioteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bioball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bioball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bioball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bioptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bioptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bioptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('biopttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geotest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geolang', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geoteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geoball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('geoball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('geoball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('geoptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geoptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geoptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geopttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engtest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('engball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('engdpalevel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engball', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('engptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('engpttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fratest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('frateststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fraball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fraball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fradpalevel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fraball', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fraptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fraptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fraptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('frapttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deutest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuteststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deuball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deudpalevel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuball', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deuptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deupttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spatest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spateststatus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spaball100', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('spaball12', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('spadpalevel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spaball', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spaptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spaptregname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spaptareaname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spapttername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('outid', name='zno_pk')
    )
    op.create_table('progress',
    sa.Column('file', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('file', name='progress_pk')
    )
    op.drop_table('test')
    op.drop_table('person')
    op.drop_table('test_subj')
    op.drop_table('test_status')
    op.drop_table('sex_type')
    op.drop_table('regname')
    # ### end Alembic commands ###
